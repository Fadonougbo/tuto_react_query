/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as Essai2Import } from './routes/essai2'
import { Route as LayoutImport } from './routes/_layout'
import { Route as R404Import } from './routes/__404'
import { Route as HomeEssaiImport } from './routes/home.essai'
import { Route as LayoutUserImport } from './routes/_layout/user'
import { Route as PostsPostIdEditImport } from './routes/posts_.$postId.edit'

// Create Virtual Routes

const EssaiLazyImport = createFileRoute('/essai')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const UserDoeLazyImport = createFileRoute('/user/doe')()
const PostIdLazyImport = createFileRoute('/post/$id')()

// Create/Update Routes

const EssaiLazyRoute = EssaiLazyImport.update({
  path: '/essai',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/essai.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const Essai2Route = Essai2Import.update({
  path: '/essai2',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/__404',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserDoeLazyRoute = UserDoeLazyImport.update({
  path: '/user/doe',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/user/doe.lazy').then((d) => d.Route))

const PostIdLazyRoute = PostIdLazyImport.update({
  path: '/post/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/post.$id.lazy').then((d) => d.Route))

const HomeEssaiRoute = HomeEssaiImport.update({
  path: '/home/essai',
  getParentRoute: () => rootRoute,
} as any)

const LayoutUserRoute = LayoutUserImport.update({
  path: '/user',
  getParentRoute: () => LayoutRoute,
} as any)

const PostsPostIdEditRoute = PostsPostIdEditImport.update({
  path: '/posts/$postId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__404': {
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/essai2': {
      preLoaderRoute: typeof Essai2Import
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/essai': {
      preLoaderRoute: typeof EssaiLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/user': {
      preLoaderRoute: typeof LayoutUserImport
      parentRoute: typeof LayoutImport
    }
    '/home/essai': {
      preLoaderRoute: typeof HomeEssaiImport
      parentRoute: typeof rootRoute
    }
    '/post/$id': {
      preLoaderRoute: typeof PostIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/doe': {
      preLoaderRoute: typeof UserDoeLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId/edit': {
      preLoaderRoute: typeof PostsPostIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  R404Route,
  LayoutRoute.addChildren([LayoutUserRoute]),
  Essai2Route,
  AboutLazyRoute,
  EssaiLazyRoute,
  HomeEssaiRoute,
  PostIdLazyRoute,
  UserDoeLazyRoute,
  PostsPostIdEditRoute,
])

/* prettier-ignore-end */
